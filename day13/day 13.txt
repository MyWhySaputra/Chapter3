Database secara sederhana bisa diartikan sebagai tempat pengumpulan data.

Database berfungsi sebagai gudang penyimpanan data untuk diolah lebih lanjut.

Proses yang bisa di digitalisasi = tetap dan berulang-ulang

Jenis - jenis database
Berdasarkan Arsitektur
1. Centralized Database Management System (CDBMS)
2. Distributed Databe Management System (DDBMS)

Berdasarkan Model
1. Hierarchical Database Model
2. Network Database Model
3. Relation Database Model
4. Object-Oriented Databse Model
5. NoSQL Database Model

Kalau dari arsitekturnya, kita bisa membedakan rumah dari struktur yang menopang bangunan, misalnya rumah kayu, rumah dengan batu bata, dan sebagainya.

Kalau dari modelnya, kita bisa membedakan rumah dari cara/gaya rumah tersebut, misalnya rumah gaya jepang, rumah minimalis, rumah scandinavian, dan sebagainya.

Centralized Database Management System (CDBMS)
- CDBMS adalah jenis database yang disimpan, terletak, dan dipelihara di satu lokasi aja.
- Jenis database ini dimodifikasi dan dikelola dari lokasi itu sendiri. Lokasi terpusat database bisa diakses lewat koneksi internet (LAN, WAN, dll).
- Di sistem ini, semua proses utama dan fungsi sistem manajemen database seperti user application programs dan user interface programs berada secara terpusat di satu komputer dengan kecepatan dan kapasitas tinggi.
- Komputer pusat ini disebut juga dengan mainframe atau server.
- Di arsitektur terpusat kayak gini, terminal komputer (client) cuma bisa menampilkan display dan kontrol yang terbatas pas akses data dari server. Karena eh karena, terminal komputer (client) ini nggak memungkinkan punya resource yang lebih, gengs.

Kelebihan
● Mengurangi risiko manajemen data, kayak data berbeda di database lain karena lokasinya semua terpusat.
● Data lebih konsisten karena mengelola data dalam repositori pusat.
● Kualitas data lebih baik, memungkinkan penetapan standar data.
● Lebih hemat biaya karena lebih sedikit usaha yang diperlukan buat menangani kumpulan data.

Kekurangan
● Ukuran database terpusat besar, jadi memperlambat waktu respons buat mengambil data.
● Nggak mudah buat memperbarui sistem basis data yang begitu luas.
● Kalau terjadi kegagalan server, seluruh data bakal hilang, yang bisa jadi kerugian besar.

Distributed Database Management System (DDBMS)
- Sama kayak namanya, distributed ini berarti database yang terdistribusi atau tersebar ke beberapa perangkat.
- Kebalikan dari Centralized DBMS, Distributed DBMS adalah database yang perangkat penyimpanannya nggak terpasang pada satu perangkat hardware yang sama. 
- Database tersebut disimpan di beberapa hardware yang terletak di tempat yang sama atau tersebar lewat jaringan komputer lainnya yang saling berhubungan.
- Sistem ini nggak sama kayak sistem paralel dengan database yang biasanya terpusat di satu hardware.
- Sistem ini terdistribusi lewat jaringan yang saling terhubung dan nggak punya komponen fisik.
- Lewat sistem administrator-nya, database bisa mendistribusikan sekumpulan data ke beberapa lokasi perangkat yang berada di server jaringan yang terorganisir.

Dua jenis distributed DBMS
● Homogen = Sistem yang di tiap tempatnya menjalankan tipe DBMS yang sama.
● Heterogen = Sistem yang tiap tempatnya menjalankan DBMS yang berbeda, baik Relational DBMS (RDBMS) atau Non-Relational DBMS.

Hal penting yang harus ada di arsitektur Distributed DBMS
● Independensi = Jadi, pengguna nggak perlu tahu di mana data berada.
● Transaksi terdistribusi = Dengan sistem distributed, pengguna bisa akses dan ubah data pada database dari beberapa tempat karena database nggak terpusat, sob.
● Transparansi = Hal ini mengacu pada prinsip dasar dari DBMS, tujuannya supaya sistem ini terlihat kayak database terpusat.Transparansi memberikan kemudahan bagi pengguna, tapi akibatnya banyak permasalahan yang bakal timbul dan harus diatasi sama DDBMS.

Kelebihan
● Database ini bisa gampang banget diperluas karena data sudah tersebar di berbagai lokasi fisik
● Database terdistribusi bisa gampang banget diakses dari jaringan yang berbeda
● Basis data ini lebih aman dibandingkan dengan basis data terpusat

Kekurangan
● Basis data ini mahal banget dan sulit dipelihara karena kerumitannya
● Dalam database ini, sulit buat memberikan tampilan yang seragam kepada pengguna karena tersebar di lokasi fisik yang berbeda

Perbedaan
CDBMS = Ini adalah database yang disimpan, terletak serta dipelihara di satu lokasi saja.
DDBMS = Terdiri dari beberapa database yang terhubung satu sama lain dan tersebar di lokasi fisik yang berbeda.

CDBMS = Waktu akses data bisa lebih lambat kalau ada beberapa pengguna yang akses dalam waktu bersamaan.
DDBMS = Waktu akses data bisa lebih cepat dibandingkan dengan Centralized Database kalau ada beberapa pengguna mengakses dalam waktu bersamaan.

CDBMS = Pengelolaan, modifikasi, dan backup database ini lebih gampang karena seluruh data ada di lokasi yang sama.
DDBMS = Pengelolaan, modifikasi, dan backup database ini sangat sulit karena tersebar di lokasi fisik yang berbeda.

CDBMS = Database ini memberikan tampilan yang seragam dan lengkap kepada semua pengguna.
DDBMS = Karena tersebar di lokasi yang berbeda, sulit buat memberikan tampilan yang seragam kepada pengguna.

CDBMS = Data di Centralized Database lebih konsisten dibandingkan dengan Distributed Database.
DDBMS = Database ini mungkin memiliki beberapa replikasi data, jadi konsistensi data kurang.

CDBMS = User nggak bisa akses database kalau terjadi kegagalan database.
DDBMS = Dalam database terdistribusi, kalau satu database gagal, pengguna punya akses ke database lain.

CDBMS = Database terpusat lebih murah.
DDBMS = Database ini lebih mahal dari Centralized Database.

Database Management System (DBMS)
DBMS adalah tools/software yang memungkinkan pengguna buat mendefinisikan, mengelola, dan mengontrol akses ke database.

DBMS yang paling banyak dipakai saat ini adalah database relational yang dikenal dengan Relational DBMS (RDBMS).

DBMS pada dasarnya punya tugas buat mengelola data, database engine, dan schema database biar proses manajemen dan pengorganisasian data bisa berjalan dengan lancar

Manfaat DBMS
1. Kecepatan dan kemudahan = DBMS bisa mengurutkan dan mengelompokkan data dengan cepat.
2. Multi-user = DBMS bisa diakses sama banyak pengguna secara bersamaan.
3. Keamanan data = karena secara sistem udah dilengkapi sama password, jadi cuma bisa diakses sama pengguna yang diizinkan aja.
4. Penghematan biaya perangkat = Bagi perusahaan besar yang punya cabang di mana-mana, penggunaan DBMS yang terpusat di satu tempat bisa menghemat biaya.
5. Kontrol data terpusat = Selain itu, server database yang terpusat juga memudahkan kontrol dan akses terhadap data.
6. Mudah membuat aplikasi = Kalau perusahaan butuh aplikasi input data yang baru, programmer nggak perlu buat ulang struktur database lagi.

Entity Relationship Diagram (ERD)
ERD ini adalah jenis diagram struktural yang dipakai buat mendesain database.

Diagram ini dideskripsikan sebagai model yang menjelaskan isi dan hubungan data pada suatu database dalam bentuk entitas, atribut, serta hubungan antar entitas.

Berikut ini adalah beberapa kasus penggunaan dan penerapan ERD:
1. Desain database = Dengan menggambar ERD buat memvisualisasikan ide desain database, kita punya kesempatan buat menemukan kesalahan dan kekurangan desain.
2. Debugging database = Debugging adalah proses penelusuran dan perbaikan terhadap database kalau terjadi masalah atau error di dalamnya. Kalau pakai ERD, kita bisa gampang banget buat menemukan entitas, melihat atributnya, dan mengidentifikasi hubungan tiap-tiap entitas yang berpotensi bermasalah.
3. Membantu proses pengumpulan informasi = Kalau bikin ERD secara konseptual yang menggambarkan objek dari sistem, kita bisa menentukan sistem informasi dari database. Model awal kayak gitu juga bisa dikembangkan jadi model database fisik yang membantu pembuatan database relasional, atau membantu pembuatan peta proses dan model aliran data.
4. Penambahan fitur database = ERD bisa jadi alat bantu visual buat proses identifikasi awal, yaitu menentukan fitur apa yang bisa ditambahkan di sistem database yang udah ada. Dengan adanya desain ERD ini, kita bisa dapat gambaran visual kondisi yang benar-benar mencerminkan struktur database fisik.

Dalam merancang ERD, kita harus melewati beberapa tahapan
● Tahap 1 – Tentukan entitas yang bakal terlibat atau menentukan tabel.
● Tahap 2 – Tentukan atribut dari masing-masing entitas.
● Tahap 3 – Tentukan relationship antar entitas.
● Tahap 4 – Buat model ERD.

Tools ERD = https://erdplus.com/
Tools ERD = https://dbdiagram.io/home

Data Flow Diagram (DFD)
Data Flow Diagram dikenal juga sebagai DFD atau aliran data yang digunakan dalam metodologi teknik analisis dan desain terstruktur pada akhir tahun 1970-an.

Berbeda dengan ERD yang menjelaskan hubungan antar entitas (tabel) di dalam sebuah database.

Data-flow diagram (DFD) bisa dengan cepat jadi cara yang populer buat memvisualisasikan langkah-langkah utama dan data yang terlibat dalam proses sistem perangkat lunak.

DFD berisi entitas, proses, aliran data, dan data store yang memberikan indikasi tentang bagaimana sebuah data ditransformasikan pada satuan data yang bergerak melalui sistem.

Beberapa komponen dalam penggunaan dan penerapan DFD:
● Komponen Terminator / Entitas Luar
Terminator mewakili entitas eksternal yang berkomunikasi dengan sistem yang sedang dikembangkan. 
Biasanya terminator dikenal dengan nama entitas luar (external entity).

Terdapat dua jenis terminator :
1. Terminator Sumber (source), yaitu terminator yang menjadi sumber. 
2. Terminator Tujuan (sink), yaitu terminator yang menjadi tujuan data / informasi sistem.

● Komponen Proses
Komponen proses menggambarkan bagian dari sistem yang mentransformasikan input menjadi output.

Berikut adalah hal-hal yang perlu diperhatikan tentang proses : 
1. Proses harus memiliki input dan output.
2. Proses dapat dihubungkan dengan komponen terminator, data store atau proses melalui alur data.
3. Sistem/bagian/divisi/departemen yang sedang dianalisis oleh profesional sistem digambarkan dengan komponen proses.

● Komponen Data Store
Komponen ini digunakan buat bikin model sekumpulan paket data dan diberi nama dengan kata benda jamak, misalnya Mahasiswa.
Data store ini biasanya berkaitan dengan penyimpanan-penyimpanan kayak file atau database yang berkaitan dengan penyimpanan secara komputerisasi, misalnya file disket, file hard disk, file pita magnetik. 
Data store juga berkaitan dengan penyimpanan secara manual kayak buku alamat, file folder, dan agenda.

● Komponen Data Flow / Aliran Data
Suatu data flow / alur data digambarkan dengan anak panah, yang menunjukkan arah menuju ke dan keluar dari suatu proses. 
Alur data ini dipakai buat menerangkan perpindahan data atau paket data/informasi dari satu bagian sistem ke bagian lainnya.

Berikut adalah beberapa manfaat dari DFD :
1. Penggambaran sistem
FD bisa kamu pakai buat menggambarkan sistem sebagai suatu jaringan yang fungsional.

2. Pembuatan model
Selain menggambarkan sistem, DFD juga bisa dipakai buat bikin sebuah model yang baru, gengs.
Kamu bisa menekankan fungsi sistem-sistem tertentu buat melihat bagian yang lebih detail dari DFD tersebut.

3. Penyampaian rancangan sistem
DFD bisa menggambarkan alur data secara lebih mudah melalui pendekatan visual, sob.
Jadi, kamu bisa menggambarkan rancangan sistem pakai DFD dan menyampaikannya pada programmer, pembuat sistem, klien, dan siapa pun yang perlu mengetahuinya.

Dalam merancang DFD, kita harus melewati beberapa tahapan
● Tahap 1 - Tentukan entitas yang bakal terlibat.
● Tahap 2 - Tentukan proses utama (sistem informasi) dengan masing-masing sub-prosesnya.
● Tahap 3 - Tentukan aliran data antar entitas dengan proses.
● Tahap 4 - Tentukan data store pada proses yang terjadi atau pada entitas.
● Tahap 5 - Buat model DFD.

Tools DFD = https://creately.com/