Model Database adalah suatu konsep yang terintegrasi dalam menggambarkan hubungan (relationships) antar data, serta batasan-batasan (constraint) data dalam suatu sistem database.

Hierarchical Database Model
Model ini biasa disebut juga sebagai model pohon karena hubungan di dalamnya digambarkan kayak pohon (tree-structured) yang dibalik.
Simpul yang paling atas disebut akar (root) dan paling bawah disebut daun.
Model ini juga mirip sama pola hubungan orangtua – anak (parent – child).
Seorang orang tua bisa punya satu anak (jenis hubungan satu ke satu, one to one) atau punya beberapa anak (jenis hubungan satu ke banyak, one to many). 
Tapi, satu anak cuma boleh punya satu orang tua aja(jenis hubungan satu ke satu, one to one).

Kelebihan
● Data bisa dengan cepat dilakukan pengambilan
● Integritas data mudah dilakukan pengaturan

Kekurangan
● Pengguna harus familiar banget sama struktur database
● Terjadi redundansi data

Network Database Model
Hierarchical Database Model tadi punya kelemahan yaitu nggak mampu mengelola hubungan banyak ke banyak (Many to Many).
Kelemahan dari Hierarchical Database Model diatasi dengan adanya Network Database Model ini!
Dalam model ini, data direpresentasikan sebagai koleksi record dan hubungan antar record direpresentasikan sebagai pointer.

Kelebihan
● Data lebih cepat diakses
● User bisa mengakses data dimulai dari beberapa tabel
● Mudah memodelkan database yang komplek
● Mudah membentuk query yang komplek dalam melakukan retrieve data

Kekurangan
● Struktur database nggak mudah buat dilakukan modifikasi.
● Perubahan struktur database yang telah didefinisikan bakal mempengaruhi program aplikasi yang mengakses database.
● User harus memahami struktur database.

Kedua model yang baru aja kita pelajari itu udah nggak banyak dipakai lagi, sob.
Alasannya, karena dua model ini punya banyak kelemahan dan cuma cocok buat struktur hirarki dan jaringan aja, jadi nggak mampu buat mengakomodir berbagai macam jenis persoalan dalam suatu sistem database.

Relational Database Model
Model ini adalah model yang paling matang dan paling umum dipakai dari semua model database. Di sini, data diorganisir berdasarkan relasi data.
Banyak banget perangkat lunak yang pakai sistem ini buat mengatur dan memelihara database lewat hubungan setiap data. 
Biasanya, semua sistem menggunakan Structured Query Language (SQL) sebagai bahasa pemrograman buat pemeliharaan relasi antar database.

Relasi data ini, ada hubungannya sama isi database, gengs! Namanya adalah Relational Keys.

Ada lima jenis Relational Keys

Super Key (semua unik (tidak ada yang sama))
Super key adalah kombinasi kolom yang jadi identitas setiap baris dalam tabel secara unik.
Tiap baris dari Tabel Stok Produk terdiri dari kolom Kode Produk, Merek Produk, dan Stok.
Kombinasi dari semua kolom ini yang bakal menghasilkan keunikan dari tiap baris.

Candidate Key
Candidate Key adalah bagian dari Super Key. Bedanya, atribut pada Candidate Key nggak berulang.
Alasannya, karena data di kolom Kode Produk dan Merek Produk nggak bisa punya informasi yang berulang, jadi tiap baris di kolom tersebut punya identitas khas-nya masing-masing.
Sementara di kolom stok, ada kemungkinan baris pertama dan ketiga jumlah stok-nya sama. Karena nggak bisa mewakili keunikan tiap barisnya, jadi kolom ini nggak masuk sebagai Candidate Key!

Perbandingan antara Super Key dan Candidate Key
Super Key = Super Key adalah kumpulan kolom yang dipakai buat secara unik mengidentifikasi semua baris dalam suatu tabel.
Candidate Key = Candidate Key adalah bentuk yang lebih kecil dan spesifik dari Super Key.

Super Key = Dalam sebuah tabel, jumlah Super Key lebih banyak dari pada jumlah Candidate Key
Candidate Key = Dalam suatu tabel, jumlah Candidate Key lebih sedikit dari jumlah Super Key.

Super Key = Nggak semua Super Key bisa jadi Candidate Key.
Candidate Key = Semua Candidate Key adalah Super Key.

Primary Key
Adalah suatu atribut (bisa satu atau lebih) yang dipakai buat memastikan bahwa tiap baris dalam tabel tersebut bersifat unik.
Syarat kolom yang dijadikan Primary key itu kayak gini, nih:
● Bersifat unik atau berbeda dengan nilai kolom lainnya.
● Nilai atribut nggak boleh Null (kosong, nggak diketahui, nggak bisa ditentukan)

Foreign Key
Suatu kolom (bisa satu atau lebih) yang dipakai sebagai penghubung antara tabel satu dengan tabel yang lainnya pada database.
Tujuannya buat menjaga hubungan antar data dan memungkinkan navigasi antara dua tabel yang berbeda.
Foreign key ini bertindak sebagai referensi silang antara dua tabel yang punya Primary Key di tabel lainnya.

Perbedaan antara Primary Key dan Foreign Key!
Primary Key = Nilai kolom bersifat unik
Foreign Key = Boleh punya nilai kolom yang sama lebih dari satu dalam satu tabel

Primary Key = Nggak boleh Null
Foreign Key = Dapat punya beberapa nilai null

Primary Key = Cuma ada satu Primary Key dalam satu tabel 
Foreign Key = Boleh punya lebih dari satu Foreign Key dalam satu tabel

Primary Key = Nilai di Primary Key nggak bisa dihapus dari tabel induk
Foreign Key = Nilai pada Foreign Key bisa dihapus dari tabel

Primary Key = Nggak ada batasan dalam memasukkan nilai pada Primary Key asalkan nilainya berbeda setiap row nya
Foreign Key = Nggak ada batasan dalam memasukkan nilai pada Foreign Key

Alternate Key
Dari contoh tadi, kita punya Candidate Key yang terdiri dari kolom Kode Produk dan Merek Produk. Terus, kita memilih satu Primary Key, yaitu Kode Produk.
Karena kolom Merek Produk ini nggak terpilih jadi Primary Key, berarti ia disebut sebagai Alternate Key!

Kelebihan Relational Database Model
● Data bisa cepat banget diakses
● Struktur database gampang buat dilakukan perubahan
● Data direpresentasikan secara logik, jadi user nggak butuh cara buat menyimpan data
● Gampang buat membentuk query yang kompleks dalam melakukan pengambilan data
● Gampang buat membangun dan memodifikasi program aplikasi

Kekurangan Relational Database Model
● Kelompok informasi/tables yang berbeda harus dilakukan relasi (join) buat melakukan pengambilan data.
● User harus familiar dengan relasi antar tabel.

Object-Oriented Database Model
Ini adalah database model yang menyimpan informasi dalam bentuk object. Object yang dimaksud tersebut dipakai dalam OOP atau Object Oriented Programming.
Pas kemampuan database bergabung sama kemampuan OOP, hasilnya bakal berupa Object-Oriented Database Model ini~

Object-Oriented Database Model ideal buat pemrograman object oriented karena pas dilakukan proses developing, controller dan model sama-sama menggunakan object.
Object-Oriented Database Model dibuat untuk menggantikan Relational Database Model kalau bahasa pemrograman yang digunakan adalah OOP.

Kelebihan
● Proses penyimpanan dan pengambilan data lebih sederhana
● Program mengakses data dengan object-nya secara langsung, jadi kinerja program akan lebih tinggi

Kekurangan
● Kekurangan dukungan platform, kebanyakan Object-Oriented Database Model cumaa mendukung bahasa pemrograman C++, C# dan Java saja.
● Kebutuhan keterampilan, dikarenakan Object-Oriented Database Model masih tergolong baru dan masih relatif jarang penggunanya.
● Sulit bermigrasi, dibutuhkan komitmen yang kuat dalam memilih DBMS yang akan digunakan, sekali bermigrasi ke Object-Oriented Database Model, akan sulit untuk kembali ke RDBMS.

NoSQL Database Model
Ini adalah database model yang menyediakan mekanisme untuk penyimpanan dan pengambilan data selain menggunakan relasi tabel yang dipakai dalam Relational Database Model.
NoSQL Database Model mencakup kesederhanaan desain dan gampang banget bagi kita buat meningkatkan performa dan kapasitas mesin.
Struktur data yang dipakai sama NoSQL Database Model berbeda dari yang dipakai dalam Relational Database Model, jadi beberapa operasi juga bisa dilakukan lebih cepat di NoSQL.

Kelebihan
● Skalabilitas tinggi dan ketersediaan tinggi.
● Memungkinkan developer buat bikin perubahan dengan cepat tanpa mempengaruhi aplikasi.

Kekurangan
● Masih relatif baru.
● Open source, jadi buat support tergantung pada komunitas.
● GUI (User Interface) nggak tersedia.
● Ukuran dokumen besar.

Dari seluruh model tadi, yang lebih sering dipakai sama banyak perusahaan adalah Relational Database Model.

Di dalam dunia pemrograman, ada dua tipe database yang banyak digunakan, yaitu SQL dan NoSQL.

SQL
SQL adalah akronim dari Structured Query Language yang secara sederhana menggunakan SQL sebagai bahasanya.
Di dalam SQL, kita bisa menyimpan data dalam bentuk tabel yang di dalamnya ada row dan column. 
Buat setiap datanya kita sebut dengan row, sedangkan informasi-informasi yang ada di suatu data kita sebut dengan column.

Berikut contoh DBMS yang berbasis Structured Query Language:

PostgreSQL
Software database ini pakai pola manajemen database relasional.
Sistem ini berguna sebagai tempat penyimpanan data yang aman dan bisa mengembalikan data tersebut sebagai respon atas request dari berbagai aplikasi lainnya.

Microsoft SQL Server 
Software database ini dibangun oleh Microsoft.
Sebagai server database, sistem ini merupakan produk perangkat lunak yang berfungsi menyimpan dan mengambil data sesuai permintaan aplikasi lainnya.

MySQL 
Ini adalah software database untuk manajemen database relasional. 
Banyak banget produk-produk IT yang dibuat pakai komponen utama MySQL. 
Contohnya kayak WordPress, Google, Flickr, Youtube, Facebook, Joomla, phpBB, Drupal, dan MODx yang pakai sistem ini buat manajemen database relasional mereka.

Microsoft Access
Microsoft Access menyimpan data dengan formatnya sendiri. Lewat software ini pengguna bisa mengimpor atau menghubungkan langsung data yang tersimpan ke database lainnya.
Microsoft Access cocok banget dipakai di sistem informasi dengan distributed database, karena penyimpanan file nggak perlu server database aktif sehingga bersifat portable.

Kalau tadi udah bahas tentang SQL, sekarang kita bahas tentang saudaranya yang bernama NoSQL.

NoSQL
NoSQL (Not Only SQL atau Not SQL) adalah database yang nggak pakai bahasa SQL dalam melaksanakan query. 
NoSQL ini kebalikan dari SQL. Artinya, setiap database NoSQL punya bahasanya sendiri.

Contoh yang DBMS yang berbasis NoSQL:

MongoDB
Merupakan software database yang berorientasi sama dokumen open source dan cross platform. MongoDB ini adalah software DBMS NoSQL yang sangat populer digunakan. 
MongoDB pakai dokumen yang mirip kayak skema JSON, oleh sebab itu sistemnya diklasifikasikan ke dalam program basis data NoSQL.
MongoDB ini menyimpan datanya dalam bentuk documents (kalau di SQL istilahnya rows). Dokumen tersebut berbentuk objek seperti JSON, yang berarti gak ada kaidah baku dalam pembuatan dokumen.
Jadi, setiap dokumen bisa memiliki bentuk data yang berbeda-beda. 
Di dalam dokumen itu terdapat beberapa field (kalau di SQL istilahnya columns). Fields tersebut formatnya berpasangan, berupa key dan value. Dokumen akan disimpan di dalam sebuah collections (kalau di SQL istilahnya tables).

Bedanya SQL sama MongoDB yang NoSQL:
SQL = Database
NoSQL = Database

SQL = Table
NoSQL = Collection

SQL = Column
NoSQL = Field

SQL = Row
NoSQL = Document

SQL = Join Table
NoSQL = Embedded Document

Link PostgreSQL = https://www.postgresql.org/